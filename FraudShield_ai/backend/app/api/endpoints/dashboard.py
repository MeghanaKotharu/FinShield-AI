# --- dashboard.py ---
# This file defines the API endpoint for fetching the aggregated dashboard feed.


import json
from pathlib import Path
from fastapi import APIRouter, HTTPException, status


# Create a new router for this endpoint
router = APIRouter()


# Define the path to the aggregated data feed file.
# This path is relative to the `backend/` directory, from where the server is run.
DATA_FILE_PATH = Path("app/data/aggregated_feed.json")


@router.get("/feed")
async def get_dashboard_feed():
   """
   Reads and returns the consolidated data from the aggregated_feed.json file.
   This file is generated by the `run_aggregation_job.py` script.
   """
   if not DATA_FILE_PATH.is_file():
       # If the file doesn't exist, return an informative error.
       raise HTTPException(
           status_code=status.HTTP_404_NOT_FOUND,
           detail="Dashboard data not found. Please run the data aggregation job first."
       )


   try:
       # Open and load the JSON data from the file
       with open(DATA_FILE_PATH, "r") as f:
           data = json.load(f)
       return data
   except Exception as e:
       # If there's an error reading or parsing the file, return a server error.
       raise HTTPException(
           status_code=status.HTTP_500_INTERNAL_SERVER_ERROR,
           detail=f"Failed to read or parse dashboard data file: {e}"
       )
